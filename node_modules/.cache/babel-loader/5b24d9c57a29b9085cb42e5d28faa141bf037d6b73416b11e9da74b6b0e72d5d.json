{"ast":null,"code":"var _jsxFileName = \"/workspaces/connect-the-dots/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport React, { useState, useEffect, useRef, createRef } from 'react';\nimport { fabric } from 'fabric';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // const [canvas, setCanvas] = useState('');\n  let canvas = /*#__PURE__*/React.createRef();\n\n  // useEffect(() => {\n  //   setCanvas(initCanvas());\n  //   // canvas.current = initCanvas();\n  //   console.log(canvas);\n  // }, []);\n\n  useEffect(() => {\n    // dynamically assign the width and height to canvas\n    const canvasEle = canvas.current;\n    canvasEle.width = canvasEle.clientWidth;\n    canvasEle.height = canvasEle.clientHeight;\n\n    // get context of the canvas\n    ctx = canvasEle.getContext(\"2d\");\n  }, []);\n  useEffect(() => {\n    drawLine({\n      x: 20,\n      y: 20,\n      x1: 20,\n      y1: 100\n    });\n    drawLine({\n      x: 50,\n      y: 50,\n      x1: 200,\n      y1: 100\n    }, {\n      color: 'red'\n    });\n    drawLine({\n      x: 300,\n      y: 250,\n      x1: 260,\n      y1: 70\n    }, {\n      color: 'green',\n      width: 5\n    });\n    drawLine({\n      x: 70,\n      y: 240,\n      x1: 160,\n      y1: 120\n    }, {\n      color: 'blue'\n    });\n  }, []);\n  const initCanvas = () => {\n    new fabric.Canvas('c', {\n      height: 800,\n      width: 800,\n      backgroundColor: 'pink'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Fabric Canvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Draw A Line\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"c\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"3ubReDTFssvu4DHeldAg55cW/CI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","React","useState","useEffect","useRef","createRef","fabric","jsxDEV","_jsxDEV","App","_s","canvas","canvasEle","current","width","clientWidth","height","clientHeight","ctx","getContext","drawLine","x","y","x1","y1","color","initCanvas","Canvas","backgroundColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["/workspaces/connect-the-dots/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, { useState, useEffect, useRef, createRef} from 'react';\nimport {fabric} from 'fabric';\n\nfunction App() {\n  // const [canvas, setCanvas] = useState('');\n  let canvas = React.createRef();\n\n  // useEffect(() => {\n  //   setCanvas(initCanvas());\n  //   // canvas.current = initCanvas();\n  //   console.log(canvas);\n  // }, []);\n\n\n  useEffect(() => {\n    // dynamically assign the width and height to canvas\n    const canvasEle = canvas.current;\n    canvasEle.width = canvasEle.clientWidth;\n    canvasEle.height = canvasEle.clientHeight;\n \n    // get context of the canvas\n    ctx = canvasEle.getContext(\"2d\");\n  }, []);\n \n  useEffect(() => {\n    drawLine({ x: 20, y: 20, x1: 20, y1: 100 });\n \n    drawLine({ x: 50, y: 50, x1: 200, y1: 100 }, { color: 'red' });\n \n    drawLine({ x: 300, y: 250, x1: 260, y1: 70 }, { color: 'green', width: 5 });\n \n    drawLine({ x: 70, y: 240, x1: 160, y1: 120 }, { color: 'blue' });\n  }, []);\n\n  const initCanvas = () => {\n    new fabric.Canvas('c', {\n      height: 800,\n      width: 800,\n      backgroundColor: 'pink'\n    })\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Fabric Canvas</h1>\n      <h3>Draw A Line</h3>\n      <canvas id=\"c\"></canvas>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,EAAEC,SAAS,QAAO,OAAO;AACpE,SAAQC,MAAM,QAAO,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,IAAIC,MAAM,gBAAGV,KAAK,CAACI,SAAS,EAAE;;EAE9B;EACA;EACA;EACA;EACA;;EAGAF,SAAS,CAAC,MAAM;IACd;IACA,MAAMS,SAAS,GAAGD,MAAM,CAACE,OAAO;IAChCD,SAAS,CAACE,KAAK,GAAGF,SAAS,CAACG,WAAW;IACvCH,SAAS,CAACI,MAAM,GAAGJ,SAAS,CAACK,YAAY;;IAEzC;IACAC,GAAG,GAAGN,SAAS,CAACO,UAAU,CAAC,IAAI,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC;EAENhB,SAAS,CAAC,MAAM;IACdiB,QAAQ,CAAC;MAAEC,CAAC,EAAE,EAAE;MAAEC,CAAC,EAAE,EAAE;MAAEC,EAAE,EAAE,EAAE;MAAEC,EAAE,EAAE;IAAI,CAAC,CAAC;IAE3CJ,QAAQ,CAAC;MAAEC,CAAC,EAAE,EAAE;MAAEC,CAAC,EAAE,EAAE;MAAEC,EAAE,EAAE,GAAG;MAAEC,EAAE,EAAE;IAAI,CAAC,EAAE;MAAEC,KAAK,EAAE;IAAM,CAAC,CAAC;IAE9DL,QAAQ,CAAC;MAAEC,CAAC,EAAE,GAAG;MAAEC,CAAC,EAAE,GAAG;MAAEC,EAAE,EAAE,GAAG;MAAEC,EAAE,EAAE;IAAG,CAAC,EAAE;MAAEC,KAAK,EAAE,OAAO;MAAEX,KAAK,EAAE;IAAE,CAAC,CAAC;IAE3EM,QAAQ,CAAC;MAAEC,CAAC,EAAE,EAAE;MAAEC,CAAC,EAAE,GAAG;MAAEC,EAAE,EAAE,GAAG;MAAEC,EAAE,EAAE;IAAI,CAAC,EAAE;MAAEC,KAAK,EAAE;IAAO,CAAC,CAAC;EAClE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIpB,MAAM,CAACqB,MAAM,CAAC,GAAG,EAAE;MACrBX,MAAM,EAAE,GAAG;MACXF,KAAK,EAAE,GAAG;MACVc,eAAe,EAAE;IACnB,CAAC,CAAC;EACJ,CAAC;EAED,oBACEpB,OAAA;IAAKqB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBtB,OAAA;MAAAsB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACtB1B,OAAA;MAAAsB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACpB1B,OAAA;MAAQ2B,EAAE,EAAC;IAAG;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAU;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACpB;AAEV;AAACxB,EAAA,CA9CQD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AAgDZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}